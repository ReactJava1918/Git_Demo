package com.movie.controller;

import java.io.File;
import java.io.IOException;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.movie.service.UserServiceImpl;

@RestController
public class RegisterController {
	
	  @Autowired
	  private UserServiceImpl userServiceImpl;
	
	@Value("${upload.directory}")
	private String uploadDirectory;

	@PostMapping("/api/register")
	public ResponseEntity<String> registerUser(
	    @RequestParam("username") String username,
	    @RequestParam("email") String email,
	    @RequestParam("password") String password,
	    @RequestParam("confirmPassword") String confirmPassword,
	    @RequestParam("image") MultipartFile image) {

	    // Validate inputs if needed
	    // ...

	    // Save user data
	    System.out.println("Username: " + username);
	    System.out.println("Email: " + email);
	    System.out.println("Password: " + password);
	    System.out.println("Confirm Password: " + confirmPassword);

	    // Process the image
	    if (image != null && !image.isEmpty()) {
	        try {
	            // Save the image to a local file
	            String imagePath = uploadImageToFileSystem(image);
	            System.out.println("Image saved to: " + imagePath);
	        } catch (IOException e) {
	            e.printStackTrace();
	            return new ResponseEntity<>("Failed to save image", HttpStatus.INTERNAL_SERVER_ERROR);
	        }
	    }

	    // Return a success response
	    
	    
	    
	    return new ResponseEntity<>("Registration successful", HttpStatus.OK);
	}


	public String uploadImageToFileSystem(MultipartFile file) throws IOException {
		final String FOLDER_PATH = "D:\\USER_IMAGE\\";

		Random random = new Random();

		// Generate a random integer
		int randomNumber = random.nextInt();

		// Ensure the directory exists or create it
		File folder = new File(FOLDER_PATH);
		if (!folder.exists()) {
			folder.mkdirs();
		}

		// Extract file extension
		String originalFileName = file.getOriginalFilename();
		System.out.println("Original file Nmae---------------------" + originalFileName);
		String fileExtension = StringUtils.getFilenameExtension(originalFileName);
		System.out.println("fileExtension---------------------" + fileExtension);

		// Generate a unique file name with timestamp before extension to handle
		// duplicates
		String fileNameWithoutExtension = StringUtils.stripFilenameExtension(originalFileName);
		System.out.println("fileNameWithoutExtension---------------------" + fileNameWithoutExtension);
		String fileName = fileNameWithoutExtension + "_" + randomNumber + "." + fileExtension;
		String filePath = FOLDER_PATH + fileName;

		// Transfer the file to the destination
		file.transferTo(new File(filePath));

		return "File uploaded successfully: " + filePath;
	}
	
	
	 
	

}
